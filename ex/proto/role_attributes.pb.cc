// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: role_attributes.proto

#include "role_attributes.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace ex {
namespace proto {
class RoleAttributesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoleAttributes>
      _instance;
} _RoleAttributes_default_instance_;
}  // namespace proto
}  // namespace ex
namespace protobuf_role_5fattributes_2eproto {
static void InitDefaultsRoleAttributes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ex::proto::_RoleAttributes_default_instance_;
    new (ptr) ::ex::proto::RoleAttributes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ex::proto::RoleAttributes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RoleAttributes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRoleAttributes}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_RoleAttributes.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ex::proto::RoleAttributes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ex::proto::RoleAttributes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ex::proto::RoleAttributes, host_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ex::proto::RoleAttributes, process_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ex::proto::RoleAttributes, node_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ex::proto::RoleAttributes, node_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ex::proto::RoleAttributes, channel_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ex::proto::RoleAttributes, channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ex::proto::RoleAttributes, id_),
  0,
  3,
  1,
  4,
  2,
  5,
  6,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 12, sizeof(::ex::proto::RoleAttributes)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ex::proto::_RoleAttributes_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "role_attributes.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025role_attributes.proto\022\010ex.proto\"\217\001\n\016Ro"
      "leAttributes\022\017\n\007host_ip\030\001 \001(\t\022\022\n\nprocess"
      "_id\030\002 \001(\004\022\021\n\tnode_name\030\003 \001(\t\022\017\n\007node_id\030"
      "\004 \001(\004\022\024\n\014channel_name\030\005 \001(\t\022\022\n\nchannel_i"
      "d\030\006 \001(\004\022\n\n\002id\030\007 \001(\004"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 179);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "role_attributes.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_role_5fattributes_2eproto
namespace ex {
namespace proto {

// ===================================================================

void RoleAttributes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleAttributes::kHostIpFieldNumber;
const int RoleAttributes::kProcessIdFieldNumber;
const int RoleAttributes::kNodeNameFieldNumber;
const int RoleAttributes::kNodeIdFieldNumber;
const int RoleAttributes::kChannelNameFieldNumber;
const int RoleAttributes::kChannelIdFieldNumber;
const int RoleAttributes::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleAttributes::RoleAttributes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_role_5fattributes_2eproto::scc_info_RoleAttributes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ex.proto.RoleAttributes)
}
RoleAttributes::RoleAttributes(const RoleAttributes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  host_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_host_ip()) {
    host_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_ip_);
  }
  node_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_node_name()) {
    node_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_name_);
  }
  channel_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_channel_name()) {
    channel_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_name_);
  }
  ::memcpy(&process_id_, &from.process_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&process_id_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:ex.proto.RoleAttributes)
}

void RoleAttributes::SharedCtor() {
  host_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&process_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&process_id_)) + sizeof(id_));
}

RoleAttributes::~RoleAttributes() {
  // @@protoc_insertion_point(destructor:ex.proto.RoleAttributes)
  SharedDtor();
}

void RoleAttributes::SharedDtor() {
  host_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RoleAttributes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RoleAttributes::descriptor() {
  ::protobuf_role_5fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_role_5fattributes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleAttributes& RoleAttributes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_role_5fattributes_2eproto::scc_info_RoleAttributes.base);
  return *internal_default_instance();
}


void RoleAttributes::Clear() {
// @@protoc_insertion_point(message_clear_start:ex.proto.RoleAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      host_ip_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      node_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      channel_name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 120u) {
    ::memset(&process_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&id_) -
        reinterpret_cast<char*>(&process_id_)) + sizeof(id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RoleAttributes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ex.proto.RoleAttributes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string host_ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host_ip().data(), static_cast<int>(this->host_ip().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ex.proto.RoleAttributes.host_ip");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 process_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_process_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &process_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string node_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->node_name().data(), static_cast<int>(this->node_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ex.proto.RoleAttributes.node_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 node_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_node_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &node_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string channel_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->channel_name().data(), static_cast<int>(this->channel_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ex.proto.RoleAttributes.channel_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 channel_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_channel_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &channel_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ex.proto.RoleAttributes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ex.proto.RoleAttributes)
  return false;
#undef DO_
}

void RoleAttributes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ex.proto.RoleAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string host_ip = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_ip().data(), static_cast<int>(this->host_ip().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ex.proto.RoleAttributes.host_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->host_ip(), output);
  }

  // optional uint64 process_id = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->process_id(), output);
  }

  // optional string node_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->node_name().data(), static_cast<int>(this->node_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ex.proto.RoleAttributes.node_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->node_name(), output);
  }

  // optional uint64 node_id = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->node_id(), output);
  }

  // optional string channel_name = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel_name().data(), static_cast<int>(this->channel_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ex.proto.RoleAttributes.channel_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->channel_name(), output);
  }

  // optional uint64 channel_id = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->channel_id(), output);
  }

  // optional uint64 id = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ex.proto.RoleAttributes)
}

::google::protobuf::uint8* RoleAttributes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ex.proto.RoleAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string host_ip = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_ip().data(), static_cast<int>(this->host_ip().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ex.proto.RoleAttributes.host_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->host_ip(), target);
  }

  // optional uint64 process_id = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->process_id(), target);
  }

  // optional string node_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->node_name().data(), static_cast<int>(this->node_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ex.proto.RoleAttributes.node_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->node_name(), target);
  }

  // optional uint64 node_id = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->node_id(), target);
  }

  // optional string channel_name = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel_name().data(), static_cast<int>(this->channel_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ex.proto.RoleAttributes.channel_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->channel_name(), target);
  }

  // optional uint64 channel_id = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->channel_id(), target);
  }

  // optional uint64 id = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ex.proto.RoleAttributes)
  return target;
}

size_t RoleAttributes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ex.proto.RoleAttributes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string host_ip = 1;
    if (has_host_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->host_ip());
    }

    // optional string node_name = 3;
    if (has_node_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->node_name());
    }

    // optional string channel_name = 5;
    if (has_channel_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->channel_name());
    }

    // optional uint64 process_id = 2;
    if (has_process_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->process_id());
    }

    // optional uint64 node_id = 4;
    if (has_node_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->node_id());
    }

    // optional uint64 channel_id = 6;
    if (has_channel_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->channel_id());
    }

    // optional uint64 id = 7;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RoleAttributes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ex.proto.RoleAttributes)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleAttributes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleAttributes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ex.proto.RoleAttributes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ex.proto.RoleAttributes)
    MergeFrom(*source);
  }
}

void RoleAttributes::MergeFrom(const RoleAttributes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ex.proto.RoleAttributes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_host_ip();
      host_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_ip_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_node_name();
      node_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_channel_name();
      channel_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_name_);
    }
    if (cached_has_bits & 0x00000008u) {
      process_id_ = from.process_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      node_id_ = from.node_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      channel_id_ = from.channel_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RoleAttributes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ex.proto.RoleAttributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleAttributes::CopyFrom(const RoleAttributes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ex.proto.RoleAttributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleAttributes::IsInitialized() const {
  return true;
}

void RoleAttributes::Swap(RoleAttributes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleAttributes::InternalSwap(RoleAttributes* other) {
  using std::swap;
  host_ip_.Swap(&other->host_ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  node_name_.Swap(&other->node_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  channel_name_.Swap(&other->channel_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(process_id_, other->process_id_);
  swap(node_id_, other->node_id_);
  swap(channel_id_, other->channel_id_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RoleAttributes::GetMetadata() const {
  protobuf_role_5fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_role_5fattributes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace ex
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ex::proto::RoleAttributes* Arena::CreateMaybeMessage< ::ex::proto::RoleAttributes >(Arena* arena) {
  return Arena::CreateInternal< ::ex::proto::RoleAttributes >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
