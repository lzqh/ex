// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: topology_change.proto

#include "topology_change.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_role_5fattributes_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_role_5fattributes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RoleAttributes;
}  // namespace protobuf_role_5fattributes_2eproto
namespace ex {
namespace proto {
class ChangeMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChangeMsg>
      _instance;
} _ChangeMsg_default_instance_;
}  // namespace proto
}  // namespace ex
namespace protobuf_topology_5fchange_2eproto {
static void InitDefaultsChangeMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ex::proto::_ChangeMsg_default_instance_;
    new (ptr) ::ex::proto::ChangeMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ex::proto::ChangeMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ChangeMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsChangeMsg}, {
      &protobuf_role_5fattributes_2eproto::scc_info_RoleAttributes.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ChangeMsg.base);
}

::google::protobuf::Metadata file_level_metadata[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ex::proto::ChangeMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ex::proto::ChangeMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ex::proto::ChangeMsg, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ex::proto::ChangeMsg, change_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ex::proto::ChangeMsg, operate_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ex::proto::ChangeMsg, role_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ex::proto::ChangeMsg, role_attr_),
  1,
  3,
  4,
  2,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(::ex::proto::ChangeMsg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ex::proto::_ChangeMsg_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "topology_change.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025topology_change.proto\022\010ex.proto\032\025role_"
      "attributes.proto\"\312\001\n\tChangeMsg\022\021\n\ttimest"
      "amp\030\001 \001(\004\022)\n\013change_type\030\002 \001(\0162\024.ex.prot"
      "o.ChangeType\022+\n\014operate_type\030\003 \001(\0162\025.ex."
      "proto.OperateType\022%\n\trole_type\030\004 \001(\0162\022.e"
      "x.proto.RoleType\022+\n\trole_attr\030\005 \001(\0132\030.ex"
      ".proto.RoleAttributes*]\n\nChangeType\022\017\n\013C"
      "HANGE_NODE\020\001\022\022\n\016CHANGE_CHANNEL\020\002\022\022\n\016CHAN"
      "GE_SERVICE\020\003\022\026\n\022CHANGE_PARTICIPANT\020\004*s\n\010"
      "RoleType\022\r\n\tROLE_NODE\020\001\022\017\n\013ROLE_WRITER\020\002"
      "\022\017\n\013ROLE_READER\020\003\022\017\n\013ROLE_SERVER\020\004\022\017\n\013RO"
      "LE_CLIENT\020\005\022\024\n\020ROLE_PARTICIPANT\020\006**\n\013Ope"
      "rateType\022\014\n\010OPT_JOIN\020\001\022\r\n\tOPT_LEAVE\020\002"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 517);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "topology_change.proto", &protobuf_RegisterTypes);
  ::protobuf_role_5fattributes_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_topology_5fchange_2eproto
namespace ex {
namespace proto {
const ::google::protobuf::EnumDescriptor* ChangeType_descriptor() {
  protobuf_topology_5fchange_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_topology_5fchange_2eproto::file_level_enum_descriptors[0];
}
bool ChangeType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RoleType_descriptor() {
  protobuf_topology_5fchange_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_topology_5fchange_2eproto::file_level_enum_descriptors[1];
}
bool RoleType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* OperateType_descriptor() {
  protobuf_topology_5fchange_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_topology_5fchange_2eproto::file_level_enum_descriptors[2];
}
bool OperateType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ChangeMsg::InitAsDefaultInstance() {
  ::ex::proto::_ChangeMsg_default_instance_._instance.get_mutable()->role_attr_ = const_cast< ::ex::proto::RoleAttributes*>(
      ::ex::proto::RoleAttributes::internal_default_instance());
}
void ChangeMsg::clear_role_attr() {
  if (role_attr_ != NULL) role_attr_->Clear();
  clear_has_role_attr();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeMsg::kTimestampFieldNumber;
const int ChangeMsg::kChangeTypeFieldNumber;
const int ChangeMsg::kOperateTypeFieldNumber;
const int ChangeMsg::kRoleTypeFieldNumber;
const int ChangeMsg::kRoleAttrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeMsg::ChangeMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_topology_5fchange_2eproto::scc_info_ChangeMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ex.proto.ChangeMsg)
}
ChangeMsg::ChangeMsg(const ChangeMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_role_attr()) {
    role_attr_ = new ::ex::proto::RoleAttributes(*from.role_attr_);
  } else {
    role_attr_ = NULL;
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&operate_type_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(operate_type_));
  // @@protoc_insertion_point(copy_constructor:ex.proto.ChangeMsg)
}

void ChangeMsg::SharedCtor() {
  ::memset(&role_attr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&role_attr_)) + sizeof(timestamp_));
  role_type_ = 1;
  change_type_ = 1;
  operate_type_ = 1;
}

ChangeMsg::~ChangeMsg() {
  // @@protoc_insertion_point(destructor:ex.proto.ChangeMsg)
  SharedDtor();
}

void ChangeMsg::SharedDtor() {
  if (this != internal_default_instance()) delete role_attr_;
}

void ChangeMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChangeMsg::descriptor() {
  ::protobuf_topology_5fchange_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_topology_5fchange_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeMsg& ChangeMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_topology_5fchange_2eproto::scc_info_ChangeMsg.base);
  return *internal_default_instance();
}


void ChangeMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:ex.proto.ChangeMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(role_attr_ != NULL);
    role_attr_->Clear();
  }
  if (cached_has_bits & 30u) {
    timestamp_ = GOOGLE_ULONGLONG(0);
    role_type_ = 1;
    change_type_ = 1;
    operate_type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChangeMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ex.proto.ChangeMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ex.proto.ChangeType change_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ex::proto::ChangeType_IsValid(value)) {
            set_change_type(static_cast< ::ex::proto::ChangeType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ex.proto.OperateType operate_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ex::proto::OperateType_IsValid(value)) {
            set_operate_type(static_cast< ::ex::proto::OperateType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ex.proto.RoleType role_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ex::proto::RoleType_IsValid(value)) {
            set_role_type(static_cast< ::ex::proto::RoleType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ex.proto.RoleAttributes role_attr = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_role_attr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ex.proto.ChangeMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ex.proto.ChangeMsg)
  return false;
#undef DO_
}

void ChangeMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ex.proto.ChangeMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 timestamp = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->timestamp(), output);
  }

  // optional .ex.proto.ChangeType change_type = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->change_type(), output);
  }

  // optional .ex.proto.OperateType operate_type = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->operate_type(), output);
  }

  // optional .ex.proto.RoleType role_type = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->role_type(), output);
  }

  // optional .ex.proto.RoleAttributes role_attr = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_role_attr(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ex.proto.ChangeMsg)
}

::google::protobuf::uint8* ChangeMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ex.proto.ChangeMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 timestamp = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->timestamp(), target);
  }

  // optional .ex.proto.ChangeType change_type = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->change_type(), target);
  }

  // optional .ex.proto.OperateType operate_type = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->operate_type(), target);
  }

  // optional .ex.proto.RoleType role_type = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->role_type(), target);
  }

  // optional .ex.proto.RoleAttributes role_attr = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_role_attr(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ex.proto.ChangeMsg)
  return target;
}

size_t ChangeMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ex.proto.ChangeMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional .ex.proto.RoleAttributes role_attr = 5;
    if (has_role_attr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *role_attr_);
    }

    // optional uint64 timestamp = 1;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->timestamp());
    }

    // optional .ex.proto.RoleType role_type = 4;
    if (has_role_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->role_type());
    }

    // optional .ex.proto.ChangeType change_type = 2;
    if (has_change_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->change_type());
    }

    // optional .ex.proto.OperateType operate_type = 3;
    if (has_operate_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->operate_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChangeMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ex.proto.ChangeMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ex.proto.ChangeMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ex.proto.ChangeMsg)
    MergeFrom(*source);
  }
}

void ChangeMsg::MergeFrom(const ChangeMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ex.proto.ChangeMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_role_attr()->::ex::proto::RoleAttributes::MergeFrom(from.role_attr());
    }
    if (cached_has_bits & 0x00000002u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000004u) {
      role_type_ = from.role_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      change_type_ = from.change_type_;
    }
    if (cached_has_bits & 0x00000010u) {
      operate_type_ = from.operate_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ChangeMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ex.proto.ChangeMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeMsg::CopyFrom(const ChangeMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ex.proto.ChangeMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeMsg::IsInitialized() const {
  return true;
}

void ChangeMsg::Swap(ChangeMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeMsg::InternalSwap(ChangeMsg* other) {
  using std::swap;
  swap(role_attr_, other->role_attr_);
  swap(timestamp_, other->timestamp_);
  swap(role_type_, other->role_type_);
  swap(change_type_, other->change_type_);
  swap(operate_type_, other->operate_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChangeMsg::GetMetadata() const {
  protobuf_topology_5fchange_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_topology_5fchange_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace ex
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ex::proto::ChangeMsg* Arena::CreateMaybeMessage< ::ex::proto::ChangeMsg >(Arena* arena) {
  return Arena::CreateInternal< ::ex::proto::ChangeMsg >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
